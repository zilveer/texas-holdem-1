<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spider.dao.SpiderPokerInfoMapper">
  <resultMap id="BaseResultMap" type="com.spider.texasinfo.SpiderPokerInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform_game_id" jdbcType="VARCHAR" property="platformGameId" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
    <result column="game_type" jdbcType="VARCHAR" property="gameType" />
    <result column="big_blind" jdbcType="DECIMAL" property="bigBlind" />
    <result column="small_blind" jdbcType="DECIMAL" property="smallBlind" />
    <result column="monetary_unit" jdbcType="VARCHAR" property="monetaryUnit" />
    <result column="game_time" jdbcType="TIMESTAMP" property="gameTime" />
    <result column="now_man" jdbcType="INTEGER" property="nowMan" />
    <result column="max_man" jdbcType="INTEGER" property="maxMan" />
    <result column="pot" jdbcType="DECIMAL" property="pot" />
    <result column="blind_level" jdbcType="VARCHAR" property="blindLevel" />
    <result column="buying" jdbcType="DECIMAL" property="buying" />
    <result column="flop" jdbcType="VARCHAR" property="flop" />
    <result column="turn" jdbcType="VARCHAR" property="turn" />
    <result column="river" jdbcType="VARCHAR" property="river" />
    <result column="over_street" jdbcType="VARCHAR" property="overStreet" />
    <result column="win_card" jdbcType="VARCHAR" property="winCard" />
    <result column="win_card_type" jdbcType="VARCHAR" property="winCardType" />
    <result column="win_card_user" jdbcType="VARCHAR" property="winCardUser" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark_json" jdbcType="VARCHAR" property="remarkJson" />
    <result column="rake" jdbcType="REAL" property="rake" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform_game_id, platform, game_type, big_blind, small_blind, monetary_unit, 
    game_time, now_man, max_man, pot, blind_level, buying, flop, turn, river, over_street, 
    win_card, win_card_type, win_card_user, remark, remark_json, rake, create_at, update_at, 
    create_user, update_user
  </sql>
  <select id="selectByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from spider_poker_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from spider_poker_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample">
    delete from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    insert into spider_poker_info (id, platform_game_id, platform, 
      game_type, big_blind, small_blind, 
      monetary_unit, game_time, now_man, 
      max_man, pot, blind_level, 
      buying, flop, turn, 
      river, over_street, win_card, 
      win_card_type, win_card_user, remark, 
      remark_json, rake, create_at, 
      update_at, create_user, update_user
      )
    values (#{id,jdbcType=INTEGER}, #{platformGameId,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, 
      #{gameType,jdbcType=VARCHAR}, #{bigBlind,jdbcType=DECIMAL}, #{smallBlind,jdbcType=DECIMAL}, 
      #{monetaryUnit,jdbcType=VARCHAR}, #{gameTime,jdbcType=TIMESTAMP}, #{nowMan,jdbcType=INTEGER}, 
      #{maxMan,jdbcType=INTEGER}, #{pot,jdbcType=DECIMAL}, #{blindLevel,jdbcType=VARCHAR}, 
      #{buying,jdbcType=DECIMAL}, #{flop,jdbcType=VARCHAR}, #{turn,jdbcType=VARCHAR}, 
      #{river,jdbcType=VARCHAR}, #{overStreet,jdbcType=VARCHAR}, #{winCard,jdbcType=VARCHAR}, 
      #{winCardType,jdbcType=VARCHAR}, #{winCardUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{remarkJson,jdbcType=VARCHAR}, #{rake,jdbcType=REAL}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    insert into spider_poker_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platformGameId != null">
        platform_game_id,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="gameType != null">
        game_type,
      </if>
      <if test="bigBlind != null">
        big_blind,
      </if>
      <if test="smallBlind != null">
        small_blind,
      </if>
      <if test="monetaryUnit != null">
        monetary_unit,
      </if>
      <if test="gameTime != null">
        game_time,
      </if>
      <if test="nowMan != null">
        now_man,
      </if>
      <if test="maxMan != null">
        max_man,
      </if>
      <if test="pot != null">
        pot,
      </if>
      <if test="blindLevel != null">
        blind_level,
      </if>
      <if test="buying != null">
        buying,
      </if>
      <if test="flop != null">
        flop,
      </if>
      <if test="turn != null">
        turn,
      </if>
      <if test="river != null">
        river,
      </if>
      <if test="overStreet != null">
        over_street,
      </if>
      <if test="winCard != null">
        win_card,
      </if>
      <if test="winCardType != null">
        win_card_type,
      </if>
      <if test="winCardUser != null">
        win_card_user,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remarkJson != null">
        remark_json,
      </if>
      <if test="rake != null">
        rake,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="platformGameId != null">
        #{platformGameId,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="bigBlind != null">
        #{bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="smallBlind != null">
        #{smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="monetaryUnit != null">
        #{monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="gameTime != null">
        #{gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowMan != null">
        #{nowMan,jdbcType=INTEGER},
      </if>
      <if test="maxMan != null">
        #{maxMan,jdbcType=INTEGER},
      </if>
      <if test="pot != null">
        #{pot,jdbcType=DECIMAL},
      </if>
      <if test="blindLevel != null">
        #{blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="buying != null">
        #{buying,jdbcType=DECIMAL},
      </if>
      <if test="flop != null">
        #{flop,jdbcType=VARCHAR},
      </if>
      <if test="turn != null">
        #{turn,jdbcType=VARCHAR},
      </if>
      <if test="river != null">
        #{river,jdbcType=VARCHAR},
      </if>
      <if test="overStreet != null">
        #{overStreet,jdbcType=VARCHAR},
      </if>
      <if test="winCard != null">
        #{winCard,jdbcType=VARCHAR},
      </if>
      <if test="winCardType != null">
        #{winCardType,jdbcType=VARCHAR},
      </if>
      <if test="winCardUser != null">
        #{winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkJson != null">
        #{remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="rake != null">
        #{rake,jdbcType=REAL},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample" resultType="java.lang.Integer">
    select count(*) from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update spider_poker_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformGameId != null">
        platform_game_id = #{record.platformGameId,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.gameType != null">
        game_type = #{record.gameType,jdbcType=VARCHAR},
      </if>
      <if test="record.bigBlind != null">
        big_blind = #{record.bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="record.smallBlind != null">
        small_blind = #{record.smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="record.monetaryUnit != null">
        monetary_unit = #{record.monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.gameTime != null">
        game_time = #{record.gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nowMan != null">
        now_man = #{record.nowMan,jdbcType=INTEGER},
      </if>
      <if test="record.maxMan != null">
        max_man = #{record.maxMan,jdbcType=INTEGER},
      </if>
      <if test="record.pot != null">
        pot = #{record.pot,jdbcType=DECIMAL},
      </if>
      <if test="record.blindLevel != null">
        blind_level = #{record.blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.buying != null">
        buying = #{record.buying,jdbcType=DECIMAL},
      </if>
      <if test="record.flop != null">
        flop = #{record.flop,jdbcType=VARCHAR},
      </if>
      <if test="record.turn != null">
        turn = #{record.turn,jdbcType=VARCHAR},
      </if>
      <if test="record.river != null">
        river = #{record.river,jdbcType=VARCHAR},
      </if>
      <if test="record.overStreet != null">
        over_street = #{record.overStreet,jdbcType=VARCHAR},
      </if>
      <if test="record.winCard != null">
        win_card = #{record.winCard,jdbcType=VARCHAR},
      </if>
      <if test="record.winCardType != null">
        win_card_type = #{record.winCardType,jdbcType=VARCHAR},
      </if>
      <if test="record.winCardUser != null">
        win_card_user = #{record.winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkJson != null">
        remark_json = #{record.remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="record.rake != null">
        rake = #{record.rake,jdbcType=REAL},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update spider_poker_info
    set id = #{record.id,jdbcType=INTEGER},
      platform_game_id = #{record.platformGameId,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      game_type = #{record.gameType,jdbcType=VARCHAR},
      big_blind = #{record.bigBlind,jdbcType=DECIMAL},
      small_blind = #{record.smallBlind,jdbcType=DECIMAL},
      monetary_unit = #{record.monetaryUnit,jdbcType=VARCHAR},
      game_time = #{record.gameTime,jdbcType=TIMESTAMP},
      now_man = #{record.nowMan,jdbcType=INTEGER},
      max_man = #{record.maxMan,jdbcType=INTEGER},
      pot = #{record.pot,jdbcType=DECIMAL},
      blind_level = #{record.blindLevel,jdbcType=VARCHAR},
      buying = #{record.buying,jdbcType=DECIMAL},
      flop = #{record.flop,jdbcType=VARCHAR},
      turn = #{record.turn,jdbcType=VARCHAR},
      river = #{record.river,jdbcType=VARCHAR},
      over_street = #{record.overStreet,jdbcType=VARCHAR},
      win_card = #{record.winCard,jdbcType=VARCHAR},
      win_card_type = #{record.winCardType,jdbcType=VARCHAR},
      win_card_user = #{record.winCardUser,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark_json = #{record.remarkJson,jdbcType=VARCHAR},
      rake = #{record.rake,jdbcType=REAL},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    update spider_poker_info
    <set>
      <if test="platformGameId != null">
        platform_game_id = #{platformGameId,jdbcType=VARCHAR},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="gameType != null">
        game_type = #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="bigBlind != null">
        big_blind = #{bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="smallBlind != null">
        small_blind = #{smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="monetaryUnit != null">
        monetary_unit = #{monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="gameTime != null">
        game_time = #{gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowMan != null">
        now_man = #{nowMan,jdbcType=INTEGER},
      </if>
      <if test="maxMan != null">
        max_man = #{maxMan,jdbcType=INTEGER},
      </if>
      <if test="pot != null">
        pot = #{pot,jdbcType=DECIMAL},
      </if>
      <if test="blindLevel != null">
        blind_level = #{blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="buying != null">
        buying = #{buying,jdbcType=DECIMAL},
      </if>
      <if test="flop != null">
        flop = #{flop,jdbcType=VARCHAR},
      </if>
      <if test="turn != null">
        turn = #{turn,jdbcType=VARCHAR},
      </if>
      <if test="river != null">
        river = #{river,jdbcType=VARCHAR},
      </if>
      <if test="overStreet != null">
        over_street = #{overStreet,jdbcType=VARCHAR},
      </if>
      <if test="winCard != null">
        win_card = #{winCard,jdbcType=VARCHAR},
      </if>
      <if test="winCardType != null">
        win_card_type = #{winCardType,jdbcType=VARCHAR},
      </if>
      <if test="winCardUser != null">
        win_card_user = #{winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkJson != null">
        remark_json = #{remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="rake != null">
        rake = #{rake,jdbcType=REAL},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    update spider_poker_info
    set platform_game_id = #{platformGameId,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      game_type = #{gameType,jdbcType=VARCHAR},
      big_blind = #{bigBlind,jdbcType=DECIMAL},
      small_blind = #{smallBlind,jdbcType=DECIMAL},
      monetary_unit = #{monetaryUnit,jdbcType=VARCHAR},
      game_time = #{gameTime,jdbcType=TIMESTAMP},
      now_man = #{nowMan,jdbcType=INTEGER},
      max_man = #{maxMan,jdbcType=INTEGER},
      pot = #{pot,jdbcType=DECIMAL},
      blind_level = #{blindLevel,jdbcType=VARCHAR},
      buying = #{buying,jdbcType=DECIMAL},
      flop = #{flop,jdbcType=VARCHAR},
      turn = #{turn,jdbcType=VARCHAR},
      river = #{river,jdbcType=VARCHAR},
      over_street = #{overStreet,jdbcType=VARCHAR},
      win_card = #{winCard,jdbcType=VARCHAR},
      win_card_type = #{winCardType,jdbcType=VARCHAR},
      win_card_user = #{winCardUser,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      remark_json = #{remarkJson,jdbcType=VARCHAR},
      rake = #{rake,jdbcType=REAL},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.spider.texasinfo.SpiderPokerInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="game_id" jdbcType="INTEGER" property="gameId" />
    <result column="game_type" jdbcType="VARCHAR" property="gameType" />
    <result column="big_blind" jdbcType="DECIMAL" property="bigBlind" />
    <result column="small_blind" jdbcType="DECIMAL" property="smallBlind" />
    <result column="monetary_unit" jdbcType="VARCHAR" property="monetaryUnit" />
    <result column="game_time" jdbcType="TIMESTAMP" property="gameTime" />
    <result column="now_man" jdbcType="INTEGER" property="nowMan" />
    <result column="max_man" jdbcType="INTEGER" property="maxMan" />
    <result column="pot" jdbcType="DECIMAL" property="pot" />
    <result column="blind_level" jdbcType="VARCHAR" property="blindLevel" />
    <result column="buying" jdbcType="DECIMAL" property="buying" />
    <result column="flop" jdbcType="VARCHAR" property="flop" />
    <result column="turn" jdbcType="VARCHAR" property="turn" />
    <result column="river" jdbcType="VARCHAR" property="river" />
    <result column="over_street" jdbcType="VARCHAR" property="overStreet" />
    <result column="win_card" jdbcType="VARCHAR" property="winCard" />
    <result column="win_card_type" jdbcType="VARCHAR" property="winCardType" />
    <result column="win_card_user" jdbcType="VARCHAR" property="winCardUser" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark_json" jdbcType="VARCHAR" property="remarkJson" />
    <result column="rake" jdbcType="REAL" property="rake" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, game_id, game_type, big_blind, small_blind, monetary_unit, game_time, now_man, 
    max_man, pot, blind_level, buying, flop, turn, river, over_street, win_card, win_card_type, 
    win_card_user, remark, remark_json, rake, company, create_at, update_at, create_user, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from spider_poker_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from spider_poker_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample">
    delete from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    insert into spider_poker_info (id, game_id, game_type, 
      big_blind, small_blind, monetary_unit, 
      game_time, now_man, max_man, 
      pot, blind_level, buying, 
      flop, turn, river, 
      over_street, win_card, win_card_type, 
      win_card_user, remark, remark_json, 
      rake, company, create_at, 
      update_at, create_user, update_user
      )
    values (#{id,jdbcType=INTEGER}, #{gameId,jdbcType=INTEGER}, #{gameType,jdbcType=VARCHAR}, 
      #{bigBlind,jdbcType=DECIMAL}, #{smallBlind,jdbcType=DECIMAL}, #{monetaryUnit,jdbcType=VARCHAR}, 
      #{gameTime,jdbcType=TIMESTAMP}, #{nowMan,jdbcType=INTEGER}, #{maxMan,jdbcType=INTEGER}, 
      #{pot,jdbcType=DECIMAL}, #{blindLevel,jdbcType=VARCHAR}, #{buying,jdbcType=DECIMAL}, 
      #{flop,jdbcType=VARCHAR}, #{turn,jdbcType=VARCHAR}, #{river,jdbcType=VARCHAR}, 
      #{overStreet,jdbcType=VARCHAR}, #{winCard,jdbcType=VARCHAR}, #{winCardType,jdbcType=VARCHAR}, 
      #{winCardUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{remarkJson,jdbcType=VARCHAR}, 
      #{rake,jdbcType=REAL}, #{company,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    insert into spider_poker_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gameId != null">
        game_id,
      </if>
      <if test="gameType != null">
        game_type,
      </if>
      <if test="bigBlind != null">
        big_blind,
      </if>
      <if test="smallBlind != null">
        small_blind,
      </if>
      <if test="monetaryUnit != null">
        monetary_unit,
      </if>
      <if test="gameTime != null">
        game_time,
      </if>
      <if test="nowMan != null">
        now_man,
      </if>
      <if test="maxMan != null">
        max_man,
      </if>
      <if test="pot != null">
        pot,
      </if>
      <if test="blindLevel != null">
        blind_level,
      </if>
      <if test="buying != null">
        buying,
      </if>
      <if test="flop != null">
        flop,
      </if>
      <if test="turn != null">
        turn,
      </if>
      <if test="river != null">
        river,
      </if>
      <if test="overStreet != null">
        over_street,
      </if>
      <if test="winCard != null">
        win_card,
      </if>
      <if test="winCardType != null">
        win_card_type,
      </if>
      <if test="winCardUser != null">
        win_card_user,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remarkJson != null">
        remark_json,
      </if>
      <if test="rake != null">
        rake,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="gameType != null">
        #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="bigBlind != null">
        #{bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="smallBlind != null">
        #{smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="monetaryUnit != null">
        #{monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="gameTime != null">
        #{gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowMan != null">
        #{nowMan,jdbcType=INTEGER},
      </if>
      <if test="maxMan != null">
        #{maxMan,jdbcType=INTEGER},
      </if>
      <if test="pot != null">
        #{pot,jdbcType=DECIMAL},
      </if>
      <if test="blindLevel != null">
        #{blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="buying != null">
        #{buying,jdbcType=DECIMAL},
      </if>
      <if test="flop != null">
        #{flop,jdbcType=VARCHAR},
      </if>
      <if test="turn != null">
        #{turn,jdbcType=VARCHAR},
      </if>
      <if test="river != null">
        #{river,jdbcType=VARCHAR},
      </if>
      <if test="overStreet != null">
        #{overStreet,jdbcType=VARCHAR},
      </if>
      <if test="winCard != null">
        #{winCard,jdbcType=VARCHAR},
      </if>
      <if test="winCardType != null">
        #{winCardType,jdbcType=VARCHAR},
      </if>
      <if test="winCardUser != null">
        #{winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkJson != null">
        #{remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="rake != null">
        #{rake,jdbcType=REAL},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.spider.texasinfo.SpiderPokerInfoExample" resultType="java.lang.Integer">
    select count(*) from spider_poker_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update spider_poker_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gameId != null">
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.gameType != null">
        game_type = #{record.gameType,jdbcType=VARCHAR},
      </if>
      <if test="record.bigBlind != null">
        big_blind = #{record.bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="record.smallBlind != null">
        small_blind = #{record.smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="record.monetaryUnit != null">
        monetary_unit = #{record.monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.gameTime != null">
        game_time = #{record.gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nowMan != null">
        now_man = #{record.nowMan,jdbcType=INTEGER},
      </if>
      <if test="record.maxMan != null">
        max_man = #{record.maxMan,jdbcType=INTEGER},
      </if>
      <if test="record.pot != null">
        pot = #{record.pot,jdbcType=DECIMAL},
      </if>
      <if test="record.blindLevel != null">
        blind_level = #{record.blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.buying != null">
        buying = #{record.buying,jdbcType=DECIMAL},
      </if>
      <if test="record.flop != null">
        flop = #{record.flop,jdbcType=VARCHAR},
      </if>
      <if test="record.turn != null">
        turn = #{record.turn,jdbcType=VARCHAR},
      </if>
      <if test="record.river != null">
        river = #{record.river,jdbcType=VARCHAR},
      </if>
      <if test="record.overStreet != null">
        over_street = #{record.overStreet,jdbcType=VARCHAR},
      </if>
      <if test="record.winCard != null">
        win_card = #{record.winCard,jdbcType=VARCHAR},
      </if>
      <if test="record.winCardType != null">
        win_card_type = #{record.winCardType,jdbcType=VARCHAR},
      </if>
      <if test="record.winCardUser != null">
        win_card_user = #{record.winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkJson != null">
        remark_json = #{record.remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="record.rake != null">
        rake = #{record.rake,jdbcType=REAL},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update spider_poker_info
    set id = #{record.id,jdbcType=INTEGER},
      game_id = #{record.gameId,jdbcType=INTEGER},
      game_type = #{record.gameType,jdbcType=VARCHAR},
      big_blind = #{record.bigBlind,jdbcType=DECIMAL},
      small_blind = #{record.smallBlind,jdbcType=DECIMAL},
      monetary_unit = #{record.monetaryUnit,jdbcType=VARCHAR},
      game_time = #{record.gameTime,jdbcType=TIMESTAMP},
      now_man = #{record.nowMan,jdbcType=INTEGER},
      max_man = #{record.maxMan,jdbcType=INTEGER},
      pot = #{record.pot,jdbcType=DECIMAL},
      blind_level = #{record.blindLevel,jdbcType=VARCHAR},
      buying = #{record.buying,jdbcType=DECIMAL},
      flop = #{record.flop,jdbcType=VARCHAR},
      turn = #{record.turn,jdbcType=VARCHAR},
      river = #{record.river,jdbcType=VARCHAR},
      over_street = #{record.overStreet,jdbcType=VARCHAR},
      win_card = #{record.winCard,jdbcType=VARCHAR},
      win_card_type = #{record.winCardType,jdbcType=VARCHAR},
      win_card_user = #{record.winCardUser,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark_json = #{record.remarkJson,jdbcType=VARCHAR},
      rake = #{record.rake,jdbcType=REAL},
      company = #{record.company,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    update spider_poker_info
    <set>
      <if test="gameId != null">
        game_id = #{gameId,jdbcType=INTEGER},
      </if>
      <if test="gameType != null">
        game_type = #{gameType,jdbcType=VARCHAR},
      </if>
      <if test="bigBlind != null">
        big_blind = #{bigBlind,jdbcType=DECIMAL},
      </if>
      <if test="smallBlind != null">
        small_blind = #{smallBlind,jdbcType=DECIMAL},
      </if>
      <if test="monetaryUnit != null">
        monetary_unit = #{monetaryUnit,jdbcType=VARCHAR},
      </if>
      <if test="gameTime != null">
        game_time = #{gameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nowMan != null">
        now_man = #{nowMan,jdbcType=INTEGER},
      </if>
      <if test="maxMan != null">
        max_man = #{maxMan,jdbcType=INTEGER},
      </if>
      <if test="pot != null">
        pot = #{pot,jdbcType=DECIMAL},
      </if>
      <if test="blindLevel != null">
        blind_level = #{blindLevel,jdbcType=VARCHAR},
      </if>
      <if test="buying != null">
        buying = #{buying,jdbcType=DECIMAL},
      </if>
      <if test="flop != null">
        flop = #{flop,jdbcType=VARCHAR},
      </if>
      <if test="turn != null">
        turn = #{turn,jdbcType=VARCHAR},
      </if>
      <if test="river != null">
        river = #{river,jdbcType=VARCHAR},
      </if>
      <if test="overStreet != null">
        over_street = #{overStreet,jdbcType=VARCHAR},
      </if>
      <if test="winCard != null">
        win_card = #{winCard,jdbcType=VARCHAR},
      </if>
      <if test="winCardType != null">
        win_card_type = #{winCardType,jdbcType=VARCHAR},
      </if>
      <if test="winCardUser != null">
        win_card_user = #{winCardUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkJson != null">
        remark_json = #{remarkJson,jdbcType=VARCHAR},
      </if>
      <if test="rake != null">
        rake = #{rake,jdbcType=REAL},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spider.texasinfo.SpiderPokerInfo">
    update spider_poker_info
    set game_id = #{gameId,jdbcType=INTEGER},
      game_type = #{gameType,jdbcType=VARCHAR},
      big_blind = #{bigBlind,jdbcType=DECIMAL},
      small_blind = #{smallBlind,jdbcType=DECIMAL},
      monetary_unit = #{monetaryUnit,jdbcType=VARCHAR},
      game_time = #{gameTime,jdbcType=TIMESTAMP},
      now_man = #{nowMan,jdbcType=INTEGER},
      max_man = #{maxMan,jdbcType=INTEGER},
      pot = #{pot,jdbcType=DECIMAL},
      blind_level = #{blindLevel,jdbcType=VARCHAR},
      buying = #{buying,jdbcType=DECIMAL},
      flop = #{flop,jdbcType=VARCHAR},
      turn = #{turn,jdbcType=VARCHAR},
      river = #{river,jdbcType=VARCHAR},
      over_street = #{overStreet,jdbcType=VARCHAR},
      win_card = #{winCard,jdbcType=VARCHAR},
      win_card_type = #{winCardType,jdbcType=VARCHAR},
      win_card_user = #{winCardUser,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      remark_json = #{remarkJson,jdbcType=VARCHAR},
      rake = #{rake,jdbcType=REAL},
      company = #{company,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>